18- Muestra el texto introducido entre comillas

21-Las comillas simples tratan el texto como un string mientras que las dobles comprueban que haya alguna variable q interpretar

22-%q se utiliza para citar strings. En el primer caso te muestra el texto entrecomillado, mientras que en el segundo entrecomilla las \ dado que se trataban de variables en vez de string.

23-Funciona igual que el caso anterior salvo que esta vez es una cita doble

24-"--4--\n--2--\n"

25-"--\#{a}--\n--\#{b}--\n"

26-

2.0.0p247 :018 > s[0,2]
 => "he" 
2.0.0p247 :019 > s[-1,1]
 => "o" 
2.0.0p247 :020 > s[0,10]
 => "hello" 

27-"helloworld"

28-"..."

29-"222" 

30- un array que tiene citado cada 1 de sus elementos

31-un array con variables citadas

32- un array con variables doblemente citadas

33-[nil, nil, nil] (un array con 3 elementos vacíos)

34-[0, 0, 0] (un array con 3 "0")

35-[[1, 2], [3, 4]] 

36-[0, 2, 4]

37-

	2.0.0p247 :015 > a[1,1]
	 => ["b"] 
	2.0.0p247 :016 > a[-2,2]
 	 => ["d", "e"] 
	2.0.0p247 :017 > a[0..2]
	 => ["a", "b", "c"] 
	2.0.0p247 :018 > a[0...1]
	 => ["a"] 
	2.0.0p247 :019 > a[-2..-1]
	 => ["d", "e"] 

38- estan indicadas en el pdf

39- 

	2.0.0p247 :001 > a = (1..4).to_a
	 => [1, 2, 3, 4] 
	2.0.0p247 :002 > a = a + [4,5]
	 => [1, 2, 3, 4, 4, 5] 
	2.0.0p247 :003 > a +=  [[6, 7, 8]]
	 => [1, 2, 3, 4, 4, 5, [6, 7, 8]] 
	2.0.0p247 :004 > a = a+9
	TypeError: no implicit conversion of Fixnum into Array
        	from (irb):4:in `+'
        	from (irb):4
        	from /usr/local/rvm/rubies/ruby-2.0.0-p247/bin/irb:13:in `<main>'

40-
	2.0.0p247 :006 > x = %w{a b c b a}
	 => ["a", "b", "c", "b", "a"] 
	2.0.0p247 :007 > x = x - %w{b c d}
	 => ["a", "a"] 

41- [0, 0, 0, 0, 0, 0, 0, 0]

42- 
	2.0.0p247 :010 > a = []
	 => [] 
	2.0.0p247 :011 > a << 1
	 => [1] 
	2.0.0p247 :012 > a << 2 << 3
	 => [1, 2, 3] 
	2.0.0p247 :013 > a << [4,5,6]
	 => [1, 2, 3, [4, 5, 6]] 
	2.0.0p247 :014 > a.concat [7,8]
	 => [1, 2, 3, [4, 5, 6], 7, 8] 

43-

	2.0.0p247 :015 > a = [1, 1, 2, 2, 3, 3, 4]
	 => [1, 1, 2, 2, 3, 3, 4] 
	2.0.0p247 :016 >  b = [5, 5, 4, 4, 3, 3, 2]
	 => [5, 5, 4, 4, 3, 3, 2] 
	2.0.0p247 :017 > c = a|b
	 => [1, 2, 3, 4, 5] 
	2.0.0p247 :018 > d = b|a
	 => [5, 4, 3, 2, 1] 
	2.0.0p247 :019 > e=a&b
	 => [2, 3, 4] 
	2.0.0p247 :020 > f=b&a
	 => [4, 3, 2] 

44 -

	2.0.0p247 :001 > a = 1..10
	 => 1..10 
	2.0.0p247 :002 > a.class
	 => Range 
	2.0.0p247 :003 > a.to_a
	 => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] 
	2.0.0p247 :004 > b = 1...10
	 => 1...10 
	2.0.0p247 :005 > b.to_a
	 => [1, 2, 3, 4, 5, 6, 7, 8, 9] 
	2.0.0p247 :006 > b.include? 10
	 => false 
	2.0.0p247 :007 > b.include? 8
	 => true 
	2.0.0p247 :008 > b.step(2) {|x| print "#{x} " }
	1 3 5 7 9  => 1...10 
	2.0.0p247 :009 > 1..3.to_a
	NoMethodError: undefined method `to_a' for 3:Fixnum
        	from (irb):9
        	from /usr/local/rvm/rubies/ruby-2.0.0-p247/bin/irb:13:in `<main>'

46-

	2.0.0p247 :001 > true.class
	 => TrueClass 
	2.0.0p247 :002 > false.class
 	 => FalseClass 
	2.0.0p247 :003 > puts "hello" if 0
	 hello
 	 => nil 
	2.0.0p247 :004 > puts "hello" if nil
	 => nil 
	2.0.0p247 :005 > puts "hello" if ""
	 (irb):5: warning: string literal in condition
	 hello
	 => nil 

47-

	2.0.0p247 :007 > x = :sym
	 => :sym 
	2.0.0p247 :008 > x.class
	 => Symbol 
	2.0.0p247 :009 > x == 'sym'
	 => false 
	2.0.0p247 :010 > x == :sym
	 => true 
	2.0.0p247 :011 > z = :'a long symbol'
	 => :"a long symbol" 
	2.0.0p247 :012 > z.class
	 => Symbol 
	2.0.0p247 :013 > x == 'sym'.to_sym
	 => true 
	2.0.0p247 :014 > x.to_s == 'sym'
	 => true

48-

	2.0.0p247 :015 > s = "Ruby"
	 => "Ruby" 
	2.0.0p247 :016 > t = s
	 => "Ruby" 
	2.0.0p247 :017 > t[-1] =""
	 => "" 
	2.0.0p247 :018 > print s
	 Rub => nil 
	2.0.0p247 :019 > t = "Java"
	 => "Java" 
	2.0.0p247 :020 > print s, t
	 RubJava => nil 
 
49- "%d %s" % [3, "rubies"]
      => "3 rubies"

50-

	2.0.0p247 :002 > x, y = 4, 5
	 => [4, 5] 
	2.0.0p247 :003 > z = x > y ? x : y
	 => 5 
	2.0.0p247 :004 > x,y,z = [1,2,3]
	 => [1, 2, 3] 

	
51-

	2.0.0p247 :005 > x = { :a =>1, :b => 2 }
	 => {:a=>1, :b=>2} 
	2.0.0p247 :006 > x.keys
	 => [:a, :b] 
	2.0.0p247 :007 > x.values
	 => [1, 2] 
	2.0.0p247 :008 > x[:c] = 3
	 => 3 
	2.0.0p247 :009 > x
	 => {:a=>1, :b=>2, :c=>3} 
	2.0.0p247 :010 > x.delete('a')
	 => nil 
	2.0.0p247 :011 > x
	 => {:a=>1, :b=>2, :c=>3} 
	2.0.0p247 :012 > x.delete(:a)
	 => 1 
	2.0.0p247 :013 > x
	 => {:b=>2, :c=>3} 
	2.0.0p247 :014 >  x = { :a => 1, :b => 2, :c => 4  }
	 => {:a=>1, :b=>2, :c=>4} 
	2.0.0p247 :015 > x.delete_if { |k,v| v % 2 == 0 }
	 => {:a=>1} 
	2.0.0p247 :016 > x
	 => {:a=>1} 

52- Intenta hacer un salto pero se encuentra con el siguiente error:

	2.0.0p247 :001 > yield 4, 5
	 LocalJumpError: no block given (yield)
         from (irb):1
         from /usr/local/rvm/rubies/ruby-2.0.0-p247/bin/irb:13:in `<main>'

53- La primera opcion sirve para inicializar la variable counts a un array de tamaño 0, mientras q con la segunda se inicializa al simbolo de los corchetes

54- 

	2.0.0p247 :005 > 'hello, world, hello LPP'.scan /\w+/
	 => ["hello", "world", "hello", "LPP"]

55-La primera sentencia inicializa un array de 3 elementos, y la segunda va mostrando los distintos valores del array 1 por 1

